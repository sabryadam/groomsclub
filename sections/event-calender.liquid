<div class="event-calender_container" id="event{{section.id}}">
    <div class="page-width">
        <div class="event-calender_section_wrap">
            {% if section.settings.heading != blank %}
            <h2 class="event_title h2">{{ section.settings.heading }}</h2>
            {% endif %}
           
        <div class="calendar">
          <input type="hidden" id="eventDate" value=""/>
        <div class="group calendar-ympicker">
            <div class="calendar-ympicker-header">
            <div style="font-size:small;" class="today">Today</div>
            <div class="close">&uarr;</div>
            </div>
            <ul style="clear:both;" class="center calendar-ympicker-months">
              <li>Jan</li>
              <li>Feb</li>
              <li>Mar</li>
              <li>Apr</li>
              <li>May</li>
              <li>Jun</li>
              <li>Jul</li>
              <li>Aug</li>
              <li>Oct</li>
              <li>Sep</li>
              <li>Nov</li>
              <li>Dec</li>
            </ul>
            <ul class="center calendar-ympicker-years">
            </ul>
        </div>

        <div class="group calendar-header">
           <p class="pointer arrow minusmonth disabled"><span>{% render 'pagination-left-arrow' %}</span></p>
            <h3 class="pointer center monthname">&nbsp;</h3>
            <p class="pointer arrow addmonth"><span>{% render 'pagination-right-arrow' %}</span></p>
        </div>

        <ul class="group calendar-days">
            <li>Mo</li><li>Tu</li><li>We</li><li>Th</li><li>Fr</li><li>Sa</li><li>Su</li>
        </ul>
        <ul class="group calendar-body"><!-- Dates go in here --></ul>
        </div>

        </div>
    </div>
</div>            
<script>
    var d = new Date();

    var Calendar = {
      themonth : d.getMonth(), // The number of the month 0-11
      theyear : d.getFullYear(), // This year
      today : [d.getFullYear(),d.getMonth(),String(d.getDate()).padStart(2, '0')], // adds today style
      selectedDate : null, // set to today in init()
      years : [], // populated with last 10 years in init()
      months : ['January','February','March','April','May','June','July','August','September','October','November','December'],
       
      init: function(){
        this.selectedDate = this.today
        // Populate the list of years in the month/year pulldown
        var year = this.theyear;
        for (var i=0; i<10; i++) {
          this.years.push(year++);
        }

        var m = Calendar.today[1] + 1;
        $('#eventDate').val(Calendar.today[0]+'-'+(m <= 9 ? '0' + m : m)+'-'+Calendar.today[2]);
        
        this.bindUIActions();
        this.render();
      },
    
      bindUIActions: function() {
        // Create Years list and add to ympicker
        for (var i=0;i<this.years.length;i++)
          $('<li data-current-year="'+this.years[i]+'"><span>'+this.years[i]+'</span></li>').appendTo('.calendar-ympicker-years');
        this.selectMonth(); this.selectYear(); // Add active class to current month n year
    
        // Slide down year month picker
        $('.monthname').click(function(){
          $('.calendar-ympicker').css('transform','translateY(0)');
        });
    
        // Close year month picker without action
        $('.close').click(function(){
          $('.calendar-ympicker').css('transform','translateY(-100%)');
        });
    
        // Move calander to today
        $('.today').click(function(){
          Calendar.themonth = d.getMonth(); 
          Calendar.theyear = d.getFullYear();
          Calendar.selectMonth(); Calendar.selectYear();
          Calendar.selectedDate =Calendar.today ;
          Calendar.render();
          $('.calendar-ympicker').css('transform','translateY(-100%)');
          var m = Calendar.today[1] + 1;
          $('#eventDate').val(Calendar.today[0]+'-'+(m <= 9 ? '0' + m : m)+'-'+Calendar.today[2]);
        });
    
        // Click handlers for ympicker list items
        $('.calendar-ympicker-months li').click(function(){        
          Calendar.themonth = $('.calendar-ympicker-months li').index($(this));
          Calendar.selectMonth();
          Calendar.render();
          $('.calendar-ympicker').css('transform','translateY(-100%)');
        });
        $('.calendar-ympicker-years li').click(function(){         
          Calendar.theyear = parseInt($(this).text());
          Calendar.selectYear();
          Calendar.render();
          $('.calendar-ympicker').css('transform','translateY(-100%)');
        });
    
        // Move the calendar pages
        $('.minusmonth').click(function(){
          Calendar.themonth += -1;
          Calendar.changeMonth();
          if(Calendar.themonth == (theme_custom.currentMonth-1)){
            $(this).addClass("disabled");
            $(".calendar-body").find("li.active.today").prevAll("li").addClass("disabled");
          }
        });
        $('.addmonth').click(function(){
          Calendar.themonth += 1;
          Calendar.changeMonth();
          $(".minusmonth").removeClass("disabled");
        });
      },
    
      // Adds class="active" to the selected month/year
      selectMonth : function(){
        $('.calendar-ympicker-months li').removeClass('active');
        $('.calendar-ympicker-months li:nth-child('+(this.themonth+1)+')').addClass('active');
      },
      selectYear : function(){
        $('.calendar-ympicker-years li').removeClass('active');
        $('.calendar-ympicker-years li:nth-child('+(this.years.indexOf(this.theyear)+1)+')').addClass('active');
      },
    
      // Makes sure that month rolls over years correctly
      changeMonth: function(){
        if(this.themonth == 12){
            this.themonth = 0;
            this.theyear++;
            this.selectYear();
          }
        else if(this.themonth == -1){
          this.themonth = 11;
          this.theyear--;
          this.selectYear();
        }
        this.selectMonth();
        this.render();
      },
    
      // Helper functions for time calculations
      TimeCalc : {
        firstDay : function(month,year) {
          var fday = new Date(year,month,1).getDay(); // Mon 1 ... Sat 6, Sun 0
          if (fday === 0) fday = 7;
          return fday -1; // Mon 0 ... Sat 5, Sun 6
        },
        numDays : function(month,year) {
          return new Date(year,month+1,0).getDate(); // Day 0 is the last day in the previous month
        }
      },
    
      render : function(){
        var days = this.TimeCalc.numDays(this.themonth, this.theyear), // get number of days in the month
          fDay = this.TimeCalc.firstDay(this.themonth, this.theyear), // find what day of the week the 1st lands on        
          daysHTML = '', i;
    
        $('.calendar .monthname').text(this.months[this.themonth]+'  '+this.theyear); // add month name and year to calendar
        $(".calendar-body").addClass(this.months[this.themonth]+'  '+this.theyear);
        for (i=0; i<fDay; i++) { // place the first day of the month in the correct position
          daysHTML += '<li class="noclick"><span>&nbsp;</span></li>';
        }
        // write out the days
        for (i=1; i<=days; i++) { 
          if(this.today[0] == this.selectedDate[0] && 
            this.today[1] == this.selectedDate[1] && 
            this.today[2] == this.selectedDate[2] &&
            this.today[0] == this.theyear && 
            this.today[1] == this.themonth && 
            this.today[2] == i)
            daysHTML += '<li class="active today"><span>' +  i +'</span></li>';
          else if(this.today[0] == this.theyear && 
            this.today[1] == this.themonth && 
            this.today[2] == i)
            daysHTML += '<li class="today">' + i +'</li>';
          else if(this.selectedDate[0] == this.theyear && 
            this.selectedDate[1] == this.themonth && 
            this.selectedDate[2] == i)
            daysHTML += '<li class="active"><span>' + i +'</span></li>';
          else
            daysHTML += '<li><span>'+ i +'</span></li>';
    
          $('.calendar-body').html(daysHTML); // Only one append call
        }
        
        // Adds active class to date when clicked
        $('.calendar-body li').click(function(){ // toggle selected dates
          if(!$(this).hasClass('noclick')){
            $('.calendar-body li').removeClass('active');
            var m = Calendar.themonth + 1;
            Calendar.selectedDate = [Calendar.theyear+'-'+(m <= 9 ? '0' + m : m)+'-'+  ($(this).text() <= 9 ? '0' + $(this).text() : $(this).text())]; // save date for reselecting           
            $(this).addClass('active');
            $('#eventDate').val(Calendar.theyear+'-'+(m <= 9 ? '0' + m : m)+'-'+  ($(this).text() <= 9 ? '0' + $(this).text() : $(this).text()));
          }
        });
      }
    };
    
    Calendar.init();
</script>
<style>
ul {
  list-style-type: none;
}
.right {
  text-align: right;
}
.center {
  text-align: center;
}
.pointer {
  cursor: pointer;
}
.group:after {
  content: "";
  display: table;
  clear: both;
}
.calendar {
  position: relative;
  overflow: hidden;
  color: #ddd;
  max-width: 100%;
  min-height: 33em;
  margin: 0 auto;
  background: transparent;
  border:1px solid var(--color-light-blue);
  border-radius: 0;
  -webkit-border-radius: 0;
}

/*Styles for dropdown*/
.calendar-ympicker{
  position: absolute;
  max-width: 19.5em;
  min-height: 15em;
  padding: 0.5em 0.5em 1em;
  transform: translateY(-100%);
  transition: transform ease-in-out 0.2s;
  background: #f5f5f5;
  z-index: 2;
  right: 0;
  left: 0;
  width: 100%;
  min-width: 100%;
  max-width: 100%;
}
.center.calendar-ympicker-months {
  padding: 0 4px;
  display: block;
}
.calendar-ympicker-months li {
  margin: 0 -2px;
  display: inline-block;
  height: 52px;
  min-width: 72px;
  line-height: 52px;
  border: 1px transparent solid;
  width: 25%;
}
.calendar-ympicker-header{
  text-align: center;
}
.calendar-ympicker-header .today{
  display: block;
  width: 100%;
}


.calendar-ympicker-header div{
  display: inline-block;
  color:#428bca;
  cursor: pointer;
}

.calendar-ympicker .close{
  text-align: right;
  border: 1px transparent solid;
}

.calendar-ympicker-header .close{
  position: absolute;
  right: 10px;
  width: 50px;
  height: 50px;
  border: 1px solid;
  display: block;
  text-align: center;
  line-height: 50px;
  top: 10px;
}

.calendar-ympicker li{
  display: inline-block;
  /* line-height: 2em; */
  border: 1px transparent solid;
  text-align: center;
  cursor: pointer;
  color: #000;
}
.calendar-ympicker li:hover{
  border-color: #428bca;
  color: #428bca;
}    
.calendar-ympicker-months{
  border-bottom: 1px solid #444;
}
.calendar-ympicker-months li{
  width: 30%;
}
.calendar-ympicker-years{
  overflow-y: scroll; 
  max-height: 200px;
  padding: 0.5em 0;
}

@media(max-width : 767px){
  .calendar-ympicker-months li{
    height: 30px;
  }
  .calendar-ympicker-years{
    max-height: none;
    overflow-y: auto;
    overflow-x: scroll;
    white-space: nowrap;
    padding: 0.5em 0;
  }
  .calendar .calendar-ympicker-years li > span {
    width: auto;
    height: auto;
    line-height: 36px;
    padding: 5px 10px;
  }
  .calendar .calendar-ympicker{
    width: 100%;
    max-width: 100%;
  }
  .calendar-ympicker-header .close{
    line-height: 30px;
    width: 30px;
    height: 30px;
  }
}
.calendar-ympicker-years li{
  width: 25%;
}
/*Years scroll bar*/
.calendar-ympicker-years::-webkit-scrollbar-thumb:horizontal:hover {
  background:#428bca;
}
.calendar-ympicker-years::-webkit-scrollbar {
  height: 8px;
}
.calendar-ympicker-years::-webkit-scrollbar-track {
  background-color: #555;
  -webkit-border-radius: 10px;
  border-radius: 10px;
}
.calendar-ympicker-years::-webkit-scrollbar-thumb {
  background-color: #aaa;
  -webkit-border-radius: 10px;
  border-radius: 10px;
}

/*Styles for main part of calander*/
.calendar-header {
  padding: 20px 0;
  margin: 0 0;
  color:var(--color-light-blue);
  display: flex;
  align-items: center;
  justify-content: center;
  border-bottom:1px solid var(--color-light-blue);
}
.calendar-header .arrow{
  position: unset;
  width: 40px;
  top: 0;
  text-align: center;
  margin: 0;
}
.calendar-header .addmonth{
  right: 0em;
}

.calendar-header .arrow svg{
  width: 15px;
  height: 15px;
}

.calendar-header .arrow span{
  display: flex;
  transition: transform ease-in-out 0.2s;
  width: 15px;
  height: auto;
  margin: 0 auto;
}


.calendar-days{
  padding: 0 .5em; /*Right and Left*/
  border-bottom: 1px solid #444;
  color: #666;
  display: none;
}

.calendar .calendar-header .monthname {
  font-size: calc(var(--font-h4) + 3px);
  margin: 0;
  min-width: 27%
}

.event_title{margin-top: 0px;}

/*Dates*/
.calendar-body{
  padding: 0 1.5em .5em 1.5em;
}
.calendar-body li, .calendar-days li{
  float: left;
  width: -webkit-calc(100%/7);
  padding:0em 0;
  text-align: center;
  cursor: pointer;
  color: var(--color-light-blue);
  font-size: var(--font-h2);
  font-weight: var(--font-heading-weight);
  margin-bottom: 0.3em;
}

.calendar li > span{
  display: inline-block;
  width: 72px;
  height: 72px;
  text-align: center;
  line-height: 72px;
  border: 1px transparent solid;
}

.calendar-body li:hover >span {
  background-color:#a1a1a1;
  color:#fff;
}
.calendar li.active > span{
  background-color:var(--color-light-blue);
  color: #fff;
}
.calendar-body .today > span{
  border: 1px solid var(--color-light-blue);      
}
.calendar-body li.noclick{
  cursor: default;
}

@media screen and (max-width: 767px) {
  .calendar{    min-height: 21em;}
  .calendar .calendar-header .monthname{min-width: 65%;} 
  .calendar li > span{width: 36px; height: 36px; line-height: 36px;}
  .calendar-body li, .calendar-days li {font-size: calc(var(--font-h2) - 17px);}
  .calendar-body {padding: 0 0em .5em 0em;} 
}

</style>        

{% schema %}
{
  "name": "Event calender Section",
  "tag": "section",
  "class": "event-calender__section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "Event Name",
      "label": "Event Title"
    }
  ]
}
{% endschema %}

<script>
  var date = new Date(),
      currentMonth = date.getMonth()+1;
  theme_custom.currentMonth = currentMonth;
</script>